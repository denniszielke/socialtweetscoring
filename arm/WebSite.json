{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "hostingPlanName": {
            "minLength": 1,
            "type": "String"
        },
        "skuName": {
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "type": "String",
            "metadata": {
                "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "skuCapacity": {
            "defaultValue": 1,
            "minValue": 1,
            "type": "Int",
            "metadata": {
                "description": "Describes plan's instance count"
            }
        },
        "databaseAccountName": {
            "minLength": 3,
            "type": "String",
            "metadata": {
                "description": "The DocumentDB database account name."
            }
        },
        "consistencyLevel": {
            "defaultValue": "Session",
            "allowedValues": [
                "Eventual",
                "Strong",
                "Session",
                "BoundedStaleness"
            ],
            "type": "String",
            "metadata": {
                "description": "The DocumentDB default consistency level for this account."
            }
        },
        "maxStalenessPrefix": {
            "defaultValue": 10,
            "minValue": 10,
            "maxValue": 1000,
            "type": "Int",
            "metadata": {
                "description": "When consistencyLevel is set to BoundedStaleness, then this value is required, otherwise it can be ignored."
            }
        },
        "maxIntervalInSeconds": {
            "defaultValue": 5,
            "minValue": 5,
            "maxValue": 600,
            "type": "Int",
            "metadata": {
                "description": "When consistencyLevel is set to BoundedStaleness, then this value is required, otherwise it can be ignored."
            }
        }
    },
    "variables": {
        "webSiteName": "[concat('todoweb', uniqueString(resourceGroup().id))]",
        "offerType": "Standard"
    },
    "resources": [
        {
            "type": "Microsoft.DocumentDB/databaseAccounts",
            "name": "[parameters('databaseAccountName')]",
            "tags": {
                "displayName": "DocumentDb"
            },
            "apiVersion": "2015-04-08",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[parameters('databaseAccountName')]",
                "databaseAccountOfferType": "[variables('offerType')]",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "[parameters('consistencyLevel')]",
                    "maxStalenessPrefix": "[parameters('maxStalenessPrefix')]",
                    "maxIntervalInSeconds": "[parameters('maxIntervalInSeconds')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": {
                "name": "[parameters('skuName')]",
                "capacity": "[parameters('skuCapacity')]"
            },
            "name": "[parameters('hostingPlanName')]",
            "apiVersion": "2015-08-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "properties": {
                "name": "[parameters('hostingPlanName')]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[variables('webSiteName')]",
            "type": "Microsoft.Web/Sites",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Web/serverFarms/', parameters('hostingPlanName'))]"
            ],
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "empty",
                "displayName": "Website"
            },
            "properties": {
                "name": "[variables('webSiteName')]",
                "serverFarm": "[parameters('hostingPlanName')]"
            },
            "resources": [
                {
                    "apiVersion": "2014-04-01",
                    "type": "config",
                    "name": "web",
                    "dependsOn": [
                        "[concat('Microsoft.Web/Sites/', variables('webSiteName'))]",
                        "[concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))]",
                        "[concat('Microsoft.Insights/Components/', variables('webSiteName'))]"
                    ],
                    "properties": {
                        "connectionStrings": [
                            {
                                "ConnectionString": "[concat(reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint, '@', listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey)]",
                                "Name": "DocDBConnection",
                                "Type": 3
                            }
                        ],
                        "appSettings": [
                            {
                                "Value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('databaseAccountName'))).documentEndpoint]",
                                "Name": "ENDPOINT"
                            },
                            {
                                "Value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('databaseAccountName')), '2015-04-08').primaryMasterKey]",
                                "Name": "AUTHKEY"
                            },
                            {
                                "Value": "[reference(concat('Microsoft.Insights/Components/', variables('webSiteName'))).InstrumentationKey]",
                                "Name": "INSTRUMENTATIONKEY"
                            },
                            {
                                "Value": "6.9.1",
                                "Name": "WEBSITE_NODE_DEFAULT_VERSION"
                            }
                        ]
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Insights/autoscalesettings",
            "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
                "displayName": "AutoScaleSettings"
            },
            "properties": {
                "profiles": [
                    {
                        "name": "Default",
                        "capacity": {
                            "minimum": 1,
                            "maximum": 2,
                            "default": 1
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT10M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT1H",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 60
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT1H"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[concat(parameters('hostingPlanName'), '-', resourceGroup().name)]",
                "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            ]
        },
        {
            "type": "Microsoft.Insights/alertrules",
            "name": "[concat('ServerErrors ', variables('webSiteName'))]",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
                "displayName": "ServerErrorsAlertRule"
            },
            "properties": {
                "name": "[concat('ServerErrors ', variables('webSiteName'))]",
                "description": "[concat(variables('webSiteName'), ' has some server errors, status code 5xx.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]",
                        "metricName": "Http5xx"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
            ]
        },
        {
            "type": "Microsoft.Insights/alertrules",
            "name": "[concat('ForbiddenRequests ', variables('webSiteName'))]",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
                "displayName": "ForbiddenRequestsAlertRule"
            },
            "properties": {
                "name": "[concat('ForbiddenRequests ', variables('webSiteName'))]",
                "description": "[concat(variables('webSiteName'), ' has some requests that are forbidden, status code 403.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]",
                        "metricName": "Http403"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
            ]
        },
        {
            "type": "Microsoft.Insights/alertrules",
            "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
                "displayName": "CPUHighAlertRule"
            },
            "properties": {
                "name": "[concat('CPUHigh ', parameters('hostingPlanName'))]",
                "description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'))]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                        "metricName": "CpuPercentage"
                    },
                    "operator": "GreaterThan",
                    "threshold": 90,
                    "windowSize": "PT15M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            ]
        },
        {
            "type": "Microsoft.Insights/alertrules",
            "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
                "displayName": "LongHttpQueueAlertRule"
            },
            "properties": {
                "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'))]",
                "description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'), ' has a large number of pending requests.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                        "metricName": "HttpQueueLength"
                    },
                    "operator": "GreaterThan",
                    "threshold": 100,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": []
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]"
            ]
        },
        {
            "type": "Microsoft.Insights/components",
            "name": "[variables('webSiteName')]",
            "apiVersion": "2014-04-01",
            "location": "East US",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', variables('webSiteName'))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "properties": {
                "applicationId": "[variables('webSiteName')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', variables('webSiteName'))]"
            ]
        }
    ]
}